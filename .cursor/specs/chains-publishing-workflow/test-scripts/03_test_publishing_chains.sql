-- Chains Publishing Workflow - Test Publishing Functionality
-- Tests chains publishing during consensus promotion

USE DATABASE APOLLO_DEVELOPMENT;

-- =========================================
-- PRE-TEST SETUP
-- =========================================

SELECT 'ðŸ§ª TESTING CHAINS CONSENSUS PUBLISHING' AS TEST_NAME;

-- Get current FGMD for testing
SET CURRENT_FGMD = (SELECT FORECAST.UDF_GET_VALID_FORECAST_GENERATION_MONTH_DATE());

-- Clean up any existing test publications
-- DELETE FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
-- WHERE MARKET_CODE IN ('USANY1', 'USAPA1', 'USAFL1');

-- DELETE FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS 
-- WHERE MARKET_CODE IN ('USANY1', 'USAPA1', 'USAFL1');

-- DELETE FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS 
-- WHERE MARKET_CODE IN ('USANY1', 'USAPA1', 'USAFL1');

-- DELETE FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATION_GROUPS 
-- WHERE DIVISION IN ('Independent Franchise', 'BBG and Control');

-- =========================================
-- TEST 1: PUBLISH TO REVIEW (NO CHAINS)
-- =========================================

SELECT 'ðŸ§ª TEST 1: Publish to Review (Should NOT publish chains)' AS TEST_NAME;

-- Count chains published forecasts before
SELECT COUNT(*) AS CHAINS_PUBLISHED_BEFORE_REVIEW
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1', 'USAFL1');

-- Publish Independent Franchise division to review
CALL FORECAST.SP_PUBLISH_DIVISION_FORECAST($CURRENT_FGMD, 'dk_test_user', 'Independent Franchise', 'review', 'DK Test review publication for Independent Franchise');

-- Publish BBG and Control division to review  
CALL FORECAST.SP_PUBLISH_DIVISION_FORECAST($CURRENT_FGMD, 'dk_test_user', 'BBG and Control', 'review', 'DK Test review publication for BBG and Control');

-- Verify core volume was published
SELECT *
FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATION_GROUPS
WHERE FORECAST_GENERATION_MONTH_DATE = $CURRENT_FGMD
AND DIVISION IN ('Independent Franchise', 'BBG and Control');

SELECT *
FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS
WHERE PUBLICATION_STATUS = 'review';

SELECT COUNT(*) AS CORE_PUBLISHED_AFTER_REVIEW
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1');

-- Verify chains were NOT published (per FR-003)
SELECT COUNT(*) AS CHAINS_PUBLISHED_AFTER_REVIEW
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1');

-- Check publication status
SELECT 
    p.MARKET_CODE, p.PUBLICATION_STATUS, g.DIVISION
FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS p
JOIN FORECAST.DEPLETIONS_FORECAST_PUBLICATION_GROUPS g ON p.GROUP_ID = g.GROUP_ID
WHERE p.MARKET_CODE IN ('TEST_MKT_001', 'TEST_MKT_002')
ORDER BY p.MARKET_CODE;

-- =========================================
-- TEST 2: PROMOTE TO CONSENSUS (WITH CHAINS)
-- =========================================

SELECT 'ðŸ§ª TEST 2: Promote to Consensus (Should publish chains)' AS TEST_NAME;

-- Count published forecasts before consensus promotion
SELECT 
    'CORE_BEFORE_CONSENSUS' AS TYPE, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')

UNION ALL

SELECT 
    'CHAINS_BEFORE_CONSENSUS' AS TYPE, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1');

-- Promote both divisions to consensus (should trigger chains publishing)
CALL FORECAST.SP_PUBLISH_DIVISION_FORECAST($CURRENT_FGMD, 'test_user', 'Independent Franchise', 'consensus', 'Test consensus promotion for Independent Franchise');
CALL FORECAST.SP_PUBLISH_DIVISION_FORECAST($CURRENT_FGMD, 'test_user', 'BBG and Control', 'consensus', 'Test consensus promotion for BBG and Control');

-- Count published forecasts after consensus promotion
SELECT 
    'CORE_AFTER_CONSENSUS' AS TYPE, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')

UNION ALL

SELECT 
    'CHAINS_AFTER_CONSENSUS' AS TYPE, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1');

-- =========================================
-- TEST 3: VERIFY CHAINS PUBLISHING DETAILS
-- =========================================

SELECT 'ðŸ§ª TEST 3: Verify Chains Publishing Details' AS TEST_NAME;

-- Verify chains published forecasts have correct metadata
SELECT 
    c.SOURCE_TABLE, c.MARKET_CODE, c.PARENT_CHAIN_CODE, c.FORECAST_METHOD,
    c.CASE_EQUIVALENT_VOLUME, c.GROUP_ID, c.PUBLICATION_ID,
    p.PUBLICATION_STATUS
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS c
JOIN FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS p ON c.PUBLICATION_ID = p.PUBLICATION_ID
WHERE c.MARKET_CODE IN ('TEST_MKT_001', 'TEST_MKT_002')
ORDER BY c.MARKET_CODE, c.PARENT_CHAIN_CODE;

-- Verify shared publication infrastructure (same GROUP_ID and PUBLICATION_ID)
SELECT 
    'CORE_VOLUME' AS SOURCE, pf.GROUP_ID, pf.PUBLICATION_ID, pf.MARKET_CODE
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS pf
WHERE pf.MARKET_CODE IN ('TEST_MKT_001', 'TEST_MKT_002')

UNION ALL

SELECT 
    'CHAINS' AS SOURCE, pc.GROUP_ID, pc.PUBLICATION_ID, pc.MARKET_CODE
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS pc
WHERE pc.MARKET_CODE IN ('TEST_MKT_001', 'TEST_MKT_002')

ORDER BY SOURCE, MARKET_CODE;

-- =========================================
-- TEST 4: VERIFY MANUAL VS DRAFT CHAINS
-- =========================================

SELECT 'ðŸ§ª TEST 4: Verify Manual vs Draft Chains Publishing' AS TEST_NAME;

-- Check manual chains forecasts (should have SOURCE_TABLE = 'manual')
SELECT 
    'MANUAL_CHAINS' AS TYPE, COUNT(*) AS COUNT,
    AVG(CASE_EQUIVALENT_VOLUME) AS AVG_VOLUME
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')
AND SOURCE_TABLE = 'manual'

UNION ALL

-- Check draft chains forecasts (should have SOURCE_TABLE = 'growth_forecast')
SELECT 
    'DRAFT_CHAINS' AS TYPE, COUNT(*) AS COUNT,
    AVG(CASE_EQUIVALENT_VOLUME) AS AVG_VOLUME
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')
AND SOURCE_TABLE = 'growth_forecast';

-- Show details of both types
SELECT 
    SOURCE_TABLE, MARKET_CODE, PARENT_CHAIN_CODE, FORECAST_YEAR, MONTH,
    CASE_EQUIVALENT_VOLUME, VERSION_NUMBER, FORECAST_METHOD
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')
ORDER BY SOURCE_TABLE, MARKET_CODE, PARENT_CHAIN_CODE;

-- =========================================
-- TEST 5: VERIFY NO ORPHANED RECORDS
-- =========================================

SELECT 'ðŸ§ª TEST 5: Verify No Orphaned Records' AS TEST_NAME;

-- Check for orphaned chains published forecasts (should be 0)
SELECT COUNT(*) AS ORPHANED_CHAINS_COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS c
WHERE NOT EXISTS (
    SELECT 1 FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS p 
    WHERE p.PUBLICATION_ID = c.PUBLICATION_ID 
    AND p.PUBLICATION_STATUS IN ('review', 'consensus')
);

-- Verify all chains forecasts have valid publication references
SELECT 
    c.MARKET_CODE, c.PARENT_CHAIN_CODE, 
    p.PUBLICATION_STATUS, g.DIVISION
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS c
JOIN FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS p ON c.PUBLICATION_ID = p.PUBLICATION_ID
JOIN FORECAST.DEPLETIONS_FORECAST_PUBLICATION_GROUPS g ON p.GROUP_ID = g.GROUP_ID
WHERE c.MARKET_CODE IN ('TEST_MKT_001', 'TEST_MKT_002')
ORDER BY c.MARKET_CODE;

-- =========================================
-- TEST SUMMARY
-- =========================================

SELECT 'ðŸ“Š PUBLISHING TEST SUMMARY' AS SECTION;

-- Final counts
SELECT 
    'CORE_PUBLISHED_FORECASTS' AS METRIC, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')

UNION ALL

SELECT 
    'CHAINS_PUBLISHED_FORECASTS' AS METRIC, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS_CHAINS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')

UNION ALL

SELECT 
    'PUBLICATIONS_CONSENSUS' AS METRIC, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS 
WHERE MARKET_CODE IN ('USANY1', 'USAPA1')
AND PUBLICATION_STATUS = 'consensus'

UNION ALL

SELECT 
    'PUBLICATION_GROUPS' AS METRIC, COUNT(*) AS COUNT
FROM FORECAST.DEPLETIONS_FORECAST_PUBLICATION_GROUPS 
WHERE DIVISION IN ('Independent Franchise', 'BBG and Control');

COMMIT;

SELECT 'âœ… PUBLISHING TESTS COMPLETE' AS STATUS;