USE SCHEMA APOLLO_WILLIAMGRANT.FORECAST;

-- Session variables
-- Override if needed prior to execution:
--   SET P_CURRENT_FGMD = '2025-07-01';
--   SET P_USER_ID = 'system_backfill';

-- Default to the most recent consensus FGMD if not already set
SET P_CURRENT_FGMD = COALESCE(
  :P_CURRENT_FGMD,
  (SELECT MAX(FORECAST_GENERATION_MONTH_DATE) FROM FORECAST.MANUAL_INPUT_DEPLETIONS_FORECAST WHERE FORECAST_STATUS = 'consensus')
);

SET P_USER_ID = COALESCE(:P_USER_ID, 'system_backfill');
SET V_FUTURE_FGMD = DATEADD(MONTH, 1, :P_CURRENT_FGMD);

-- Backfill: replace any bannered next-FGMD comment with the raw source comment
UPDATE FORECAST.MANUAL_INPUT_DEPLETIONS_FORECAST AS target
SET 
  COMMENT = source.COMMENT,
  UPDATED_BY_USER_ID = :P_USER_ID,
  UPDATED_AT = CURRENT_TIMESTAMP(),
  CURRENT_VERSION = target.CURRENT_VERSION + 1
FROM (
  SELECT 
    MARKET_CODE, DISTRIBUTOR_ID, VARIANT_SIZE_PACK_ID,
    FORECAST_YEAR, MONTH, FORECAST_METHOD, COMMENT
  FROM FORECAST.MANUAL_INPUT_DEPLETIONS_FORECAST
  WHERE FORECAST_GENERATION_MONTH_DATE = :P_CURRENT_FGMD
    AND FORECAST_STATUS = 'consensus'
) AS source
WHERE target.MARKET_CODE = source.MARKET_CODE
  AND target.DISTRIBUTOR_ID = source.DISTRIBUTOR_ID
  AND target.VARIANT_SIZE_PACK_ID = source.VARIANT_SIZE_PACK_ID
  AND target.FORECAST_YEAR = source.FORECAST_YEAR
  AND target.MONTH = source.MONTH
  AND target.FORECAST_METHOD = source.FORECAST_METHOD
  AND target.FORECAST_GENERATION_MONTH_DATE = :V_FUTURE_FGMD
  AND (
    target.COMMENT LIKE 'Auto-synced from ' || :P_CURRENT_FGMD || ' consensus.%' OR
    target.COMMENT LIKE 'Auto-synced from ' || :P_CURRENT_FGMD || ' consensus.'
  );

-- Ensure version history exists for updated rows
MERGE INTO FORECAST.MANUAL_INPUT_DEPLETIONS_FORECAST_VERSIONS AS target
USING (
  SELECT 
    m.ID AS FORECAST_ID,
    m.CURRENT_VERSION AS VERSION_NUMBER,
    m.MARKET_NAME, m.MARKET_CODE,
    m.DISTRIBUTOR_NAME, m.DISTRIBUTOR_ID,
    m.BRAND, m.BRAND_ID, m.VARIANT, m.VARIANT_ID,
    m.VARIANT_SIZE_PACK_DESC, m.VARIANT_SIZE_PACK_ID,
    m.FORECAST_YEAR, m.MONTH, m.FORECAST_METHOD,
    m.FORECAST_GENERATION_MONTH_DATE, m.MANUAL_CASE_EQUIVALENT_VOLUME,
    m.UPDATED_BY_USER_ID, m.FORECAST_STATUS, m.COMMENT
  FROM FORECAST.MANUAL_INPUT_DEPLETIONS_FORECAST m
  WHERE m.FORECAST_GENERATION_MONTH_DATE = :V_FUTURE_FGMD
    AND m.UPDATED_BY_USER_ID = :P_USER_ID
) AS source
ON (target.FORECAST_ID = source.FORECAST_ID AND target.VERSION_NUMBER = source.VERSION_NUMBER)
WHEN NOT MATCHED THEN
INSERT (
  FORECAST_ID, VERSION_NUMBER, MARKET_NAME, MARKET_CODE,
  DISTRIBUTOR_NAME, DISTRIBUTOR_ID, BRAND, BRAND_ID, VARIANT, VARIANT_ID,
  VARIANT_SIZE_PACK_DESC, VARIANT_SIZE_PACK_ID, FORECAST_YEAR, MONTH, FORECAST_METHOD,
  FORECAST_GENERATION_MONTH_DATE, MANUAL_CASE_EQUIVALENT_VOLUME,
  UPDATED_BY_USER_ID, FORECAST_STATUS, COMMENT, CREATED_AT
) VALUES (
  source.FORECAST_ID, source.VERSION_NUMBER, source.MARKET_NAME, source.MARKET_CODE,
  source.DISTRIBUTOR_NAME, source.DISTRIBUTOR_ID, source.BRAND, source.BRAND_ID, source.VARIANT, source.VARIANT_ID,
  source.VARIANT_SIZE_PACK_DESC, source.VARIANT_SIZE_PACK_ID, source.FORECAST_YEAR, source.MONTH, source.FORECAST_METHOD,
  source.FORECAST_GENERATION_MONTH_DATE, source.MANUAL_CASE_EQUIVALENT_VOLUME,
  source.UPDATED_BY_USER_ID, source.FORECAST_STATUS, source.COMMENT, CURRENT_TIMESTAMP()
);
