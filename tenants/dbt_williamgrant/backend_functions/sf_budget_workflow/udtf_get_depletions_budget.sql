-- Snowflake SQL UDTF for get_depletions_budget
-- Target Schema: APOLLO_DEVELOPMENT.FORECAST

CREATE OR REPLACE FUNCTION FORECAST.UDTF_GET_DEPLETIONS_BUDGET(
    P_BUDGET_CYCLE_DATE DATE,
    P_FORECAST_METHOD VARCHAR,
    P_MARKETS ARRAY,
    P_CUSTOMERS ARRAY,
    P_VARIANT_SIZE_PACK_IDS ARRAY,
    P_ONLY_PRIMARY BOOLEAN DEFAULT NULL
)
RETURNS TABLE (
    MARKET_ID VARCHAR,
    MARKET VARCHAR,
    MARKET_AREA_NAME VARCHAR,
    CUSTOMER_ID VARCHAR,
    CUSTOMER VARCHAR,
    BRAND VARCHAR,
    VARIANT VARCHAR,
    VARIANT_ID VARCHAR,
    VARIANT_SIZE_PACK_DESC VARCHAR,
    VARIANT_SIZE_PACK_ID VARCHAR,
    YEAR INTEGER,
    MONTH INTEGER,
    FORECAST_METHOD VARCHAR,
    BUDGET_CYCLE_DATE DATE,
    DATA_TYPE VARCHAR,
    IS_MANUAL_INPUT BOOLEAN,
    FORECAST_STATUS VARCHAR,
    CURRENT_VERSION INTEGER,
    TAG_IDS ARRAY,
    TAG_NAMES ARRAY,
    COMMENT VARCHAR,
    CASE_EQUIVALENT_VOLUME FLOAT,
    PY_CASE_EQUIVALENT_VOLUME FLOAT,
    CY_3M_CASE_EQUIVALENT_VOLUME FLOAT,
    CY_6M_CASE_EQUIVALENT_VOLUME FLOAT,
    CY_12M_CASE_EQUIVALENT_VOLUME FLOAT,
    PY_3M_CASE_EQUIVALENT_VOLUME FLOAT,
    PY_6M_CASE_EQUIVALENT_VOLUME FLOAT,
    PY_12M_CASE_EQUIVALENT_VOLUME FLOAT,
    CASE_EQUIVALENT_VOLUME_GOAL FLOAT,
    GSV_RATE FLOAT
)
LANGUAGE SQL
AS
$$
-- Prefer budget primary method when primary-only
WITH BASE AS (
    SELECT *
    FROM FORECAST.VW_GET_BUDGET_BASE
    WHERE BUDGET_CYCLE_DATE = P_BUDGET_CYCLE_DATE
      AND (P_FORECAST_METHOD IS NULL OR FORECAST_METHOD = P_FORECAST_METHOD)
      AND (P_MARKETS IS NULL OR ARRAY_SIZE(P_MARKETS) = 0 OR ARRAY_CONTAINS(MARKET_CODE::VARIANT, P_MARKETS))
      AND (P_CUSTOMERS IS NULL OR ARRAY_SIZE(P_CUSTOMERS) = 0 OR ARRAY_CONTAINS(LEFT(DISTRIBUTOR_ID, 5)::VARIANT, P_CUSTOMERS))
      AND (P_VARIANT_SIZE_PACK_IDS IS NULL OR ARRAY_SIZE(P_VARIANT_SIZE_PACK_IDS) = 0 OR ARRAY_CONTAINS(VARIANT_SIZE_PACK_ID::VARIANT, P_VARIANT_SIZE_PACK_IDS))
),
PREFERRED AS (
    SELECT b.*, pm.FORECAST_METHOD AS PRIMARY_METHOD
    FROM BASE b
    LEFT JOIN FORECAST.DEPLETIONS_BUDGET_PRIMARY_METHOD pm
      ON pm.BUDGET_CYCLE_DATE = b.BUDGET_CYCLE_DATE
     AND pm.MARKET_CODE = b.MARKET_CODE
     AND pm.DISTRIBUTOR_ID = b.DISTRIBUTOR_ID
     AND pm.VARIANT_SIZE_PACK_ID = b.VARIANT_SIZE_PACK_ID
)
SELECT
    p.MARKET_CODE AS MARKET_ID,
    p.MARKET_NAME AS MARKET,
    p.MARKET_AREA_NAME AS MARKET_AREA_NAME,
    LEFT(p.DISTRIBUTOR_ID, 5) AS CUSTOMER_ID,
    p.DISTRIBUTOR_NAME AS CUSTOMER,
    p.BRAND AS BRAND,
    p.VARIANT AS VARIANT,
    p.VARIANT_ID AS VARIANT_ID,
    p.VARIANT_SIZE_PACK_DESC AS VARIANT_SIZE_PACK_DESC,
    p.VARIANT_SIZE_PACK_ID AS VARIANT_SIZE_PACK_ID,
    p.FORECAST_YEAR AS YEAR,
    p.MONTH,
    p.FORECAST_METHOD,
    p.BUDGET_CYCLE_DATE,
    'budget' AS DATA_TYPE,
    ANY_VALUE(p.IS_MANUAL_INPUT) AS IS_MANUAL_INPUT,
    CASE WHEN FORECAST.UDF_IS_BUDGET_APPROVED(P_BUDGET_CYCLE_DATE) THEN 'approved' ELSE 'draft' END AS FORECAST_STATUS,
    CAST(0 AS INTEGER) AS CURRENT_VERSION,
    p.TAG_IDS,
    p.TAG_NAMES,
    p.COMMENT AS COMMENT,
    ROUND(SUM(CAST(p.CASE_EQUIVALENT_VOLUME AS FLOAT)), 2) AS CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.py_case_equivalent_volume, 0)), 2) AS FLOAT) AS PY_CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.cy_3m_sum, 0)), 2) AS FLOAT) AS CY_3M_CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.cy_6m_sum, 0)), 2) AS FLOAT) AS CY_6M_CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.cy_12m_sum, 0)), 2) AS FLOAT) AS CY_12M_CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.py_3m_sum, 0)), 2) AS FLOAT) AS PY_3M_CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.py_6m_sum, 0)), 2) AS FLOAT) AS PY_6M_CASE_EQUIVALENT_VOLUME,
    CAST(ROUND(SUM(COALESCE(p.py_12m_sum, 0)), 2) AS FLOAT) AS PY_12M_CASE_EQUIVALENT_VOLUME,
    ROUND(SUM(CAST(p.CASE_EQUIVALENT_VOLUME_GOAL AS FLOAT)), 2) AS CASE_EQUIVALENT_VOLUME_GOAL,
    CAST(NULL AS FLOAT) AS GSV_RATE
FROM PREFERRED p
WHERE (
    P_FORECAST_METHOD IS NOT NULL
    OR COALESCE(P_ONLY_PRIMARY, TRUE) = FALSE
    OR p.PRIMARY_METHOD = p.FORECAST_METHOD
)
GROUP BY ALL
ORDER BY
    MARKET,
    CUSTOMER,
    VARIANT_SIZE_PACK_DESC,
    YEAR,
    MONTH
$$;
