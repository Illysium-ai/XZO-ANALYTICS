-- Snowflake SQL UDTF for get_market_published_forecasts
-- Target Schema: APOLLO_WILLIAMGRANT.FORECAST


CREATE OR REPLACE FUNCTION FORECAST.UDTF_GET_MARKET_PUBLISHED_FORECAST(
    P_MARKET_CODE VARCHAR,
    P_PUBLICATION_ID INTEGER DEFAULT NULL
)
RETURNS TABLE (
    PUBLICATION_ID INTEGER,
    PUBLICATION_DATE TIMESTAMP_NTZ,      -- Changed from TIMESTAMP
    PUBLISHED_BY_USER_ID VARCHAR,
    SOURCE_TABLE VARCHAR,
    DISTRIBUTOR_ID VARCHAR,
    BRAND VARCHAR,
    VARIANT_SIZE_PACK_DESC VARCHAR,
    VARIANT_SIZE_PACK_ID VARCHAR,
    FORECAST_YEAR INTEGER,
    MONTH INTEGER,
    FORECAST_METHOD VARCHAR,
    CASE_EQUIVALENT_VOLUME FLOAT       -- Changed from NUMERIC
)
LANGUAGE SQL
AS
$$
    SELECT 
        p.PUBLICATION_ID,
        pp.APPROVAL_STATUS_DATE AS PUBLICATION_DATE,
        pp.PUBLISHED_BY_USER_ID,
        p.SOURCE_TABLE,
        p.DISTRIBUTOR_ID,
        p.BRAND,
        p.VARIANT_SIZE_PACK_DESC,
        p.VARIANT_SIZE_PACK_ID,
        p.FORECAST_YEAR,
        p.MONTH,
        p.FORECAST_METHOD,
        p.CASE_EQUIVALENT_VOLUME::FLOAT
    FROM 
        FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS p
    JOIN
        FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS pp ON p.PUBLICATION_ID = pp.PUBLICATION_ID
    WHERE 
        p.MARKET_CODE = P_MARKET_CODE AND
        (P_PUBLICATION_ID IS NULL OR p.PUBLICATION_ID = P_PUBLICATION_ID)
    ORDER BY 
        pp.APPROVAL_STATUS_DATE DESC,
        p.DISTRIBUTOR_ID,
        p.VARIANT_SIZE_PACK_ID,
        p.FORECAST_YEAR,
        p.MONTH
$$;

COMMENT ON FUNCTION FORECAST.UDTF_GET_MARKET_PUBLISHED_FORECAST(VARCHAR, INTEGER) IS
'Retrieves published forecasts for a specific market, optionally filtered by publication_id.';

-- Example Usage:
-- SELECT * FROM TABLE(FORECAST.UDTF_GET_MARKET_PUBLISHED_FORECAST('USACA1', NULL));
-- SELECT * FROM TABLE(FORECAST.UDTF_GET_MARKET_PUBLISHED_FORECAST('USACA1', 123)); 