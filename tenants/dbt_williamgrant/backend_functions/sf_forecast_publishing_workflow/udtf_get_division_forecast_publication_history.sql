-- Snowflake SQL UDTF for get_division_forecast_publication_history
-- Target Schema: APOLLO_WILLIAMGRANT.FORECAST


CREATE OR REPLACE FUNCTION FORECAST.UDTF_GET_DIVISION_FORECAST_PUBLICATION_HISTORY(
    P_DIVISION VARCHAR DEFAULT NULL,
    P_INCLUDE_UNPUBLISHED BOOLEAN DEFAULT FALSE,
    P_FORECAST_GENERATION_MONTH_DATE_FILTER DATE DEFAULT NULL
)
RETURNS TABLE (
    PUBLICATION_ID INTEGER,
    GROUP_ID INTEGER,
    DIVISION VARCHAR,
    MARKET_CODE VARCHAR,
    PUBLICATION_DATE TIMESTAMP_NTZ,      -- Changed from TIMESTAMP
    PUBLISHED_BY_USER_ID VARCHAR,
    FORECAST_GENERATION_MONTH_DATE DATE,
    PUBLICATION_NOTE VARCHAR,           -- Changed from TEXT
    PUBLICATION_STATUS VARCHAR,
    APPROVAL_STATUS_DATE TIMESTAMP_NTZ,  -- Changed from TIMESTAMP
    FORECAST_COUNT INTEGER
)
LANGUAGE SQL
AS
$$
    SELECT 
        p.PUBLICATION_ID,
        g.GROUP_ID,
        g.DIVISION,
        p.MARKET_CODE,
        g.PUBLICATION_DATE,
        p.PUBLISHED_BY_USER_ID,
        p.FORECAST_GENERATION_MONTH_DATE,
        p.PUBLICATION_NOTE,
        p.PUBLICATION_STATUS,
        p.APPROVAL_STATUS_DATE,
        COUNT(pf.ID)::INTEGER AS FORECAST_COUNT
    FROM 
        FORECAST.DEPLETIONS_FORECAST_PUBLICATION_GROUPS g
    JOIN
        FORECAST.DEPLETIONS_FORECAST_PUBLICATIONS p ON g.GROUP_ID = p.GROUP_ID
    LEFT JOIN
        FORECAST.DEPLETIONS_FORECAST_PUBLISHED_FORECASTS pf ON p.PUBLICATION_ID = pf.PUBLICATION_ID
    WHERE 
        (P_DIVISION IS NULL OR UPPER(P_DIVISION) = 'ALL' OR g.DIVISION = P_DIVISION)
        AND (P_INCLUDE_UNPUBLISHED = TRUE OR p.PUBLICATION_STATUS != 'unpublished')
        AND (P_FORECAST_GENERATION_MONTH_DATE_FILTER IS NULL OR p.FORECAST_GENERATION_MONTH_DATE = P_FORECAST_GENERATION_MONTH_DATE_FILTER)
    GROUP BY
        p.PUBLICATION_ID,
        g.GROUP_ID,
        g.DIVISION,
        p.MARKET_CODE,
        g.PUBLICATION_DATE,
        p.PUBLISHED_BY_USER_ID,
        p.FORECAST_GENERATION_MONTH_DATE,
        p.PUBLICATION_NOTE,
        p.PUBLICATION_STATUS,
        p.APPROVAL_STATUS_DATE
    ORDER BY 
        g.DIVISION,
        p.MARKET_CODE,
        p.APPROVAL_STATUS_DATE DESC
$$;

COMMENT ON FUNCTION FORECAST.UDTF_GET_DIVISION_FORECAST_PUBLICATION_HISTORY(VARCHAR, BOOLEAN, DATE) IS
'Retrieves forecast publication history, optionally filtered by division, inclusion of unpublished records, and forecast generation month date.';

-- Example Usage:
-- SELECT * FROM TABLE(FORECAST.UDTF_GET_DIVISION_FORECAST_PUBLICATION_HISTORY(NULL, TRUE, NULL));
-- SELECT * FROM TABLE(FORECAST.UDTF_GET_DIVISION_FORECAST_PUBLICATION_HISTORY('SomeDivision', FALSE, '2025-01-01')); 